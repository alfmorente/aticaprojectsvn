/* Auto-generated by genmsg_cpp for file /home/atica/catkin_ws/src/Modulo_Conduccion/msg/nivelBomba.msg */
#ifndef MODULO_CONDUCCION_MESSAGE_NIVELBOMBA_H
#define MODULO_CONDUCCION_MESSAGE_NIVELBOMBA_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace Modulo_Conduccion
{
template <class ContainerAllocator>
struct nivelBomba_ {
  typedef nivelBomba_<ContainerAllocator> Type;

  nivelBomba_()
  : nivel(0)
  {
  }

  nivelBomba_(const ContainerAllocator& _alloc)
  : nivel(0)
  {
  }

  typedef uint8_t _nivel_type;
  uint8_t nivel;


  typedef boost::shared_ptr< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct nivelBomba
typedef  ::Modulo_Conduccion::nivelBomba_<std::allocator<void> > nivelBomba;

typedef boost::shared_ptr< ::Modulo_Conduccion::nivelBomba> nivelBombaPtr;
typedef boost::shared_ptr< ::Modulo_Conduccion::nivelBomba const> nivelBombaConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace Modulo_Conduccion

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1fa59fa4955af9ca1e740cc83229485";
  }

  static const char* value(const  ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1fa59fa4955af9cULL;
  static const uint64_t static_value2 = 0xa1e740cc83229485ULL;
};

template<class ContainerAllocator>
struct DataType< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > {
  static const char* value() 
  {
    return "Modulo_Conduccion/nivelBomba";
  }

  static const char* value(const  ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 nivel\n\
\n\
";
  }

  static const char* value(const  ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.nivel);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct nivelBomba_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::Modulo_Conduccion::nivelBomba_<ContainerAllocator> & v) 
  {
    s << indent << "nivel: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.nivel);
  }
};


} // namespace message_operations
} // namespace ros

#endif // MODULO_CONDUCCION_MESSAGE_NIVELBOMBA_H

